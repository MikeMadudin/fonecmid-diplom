
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
		
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	ПроверитьДоговор(Отказ);

	СформироватьДвижения(Отказ);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;		
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							"Создан новый документ ""Обслуживание клиента"".
							|Описание проблемы: %1.
							|Дата проведения работ: %2.
							|Время начала работ (план): %3.
							|Время окончания работ (план): %4.
							|Клиент: %5.
							|Специалист: %6.",
							ОписаниеПроблемы,
							Формат(ДатаПроведенияРабот, "ДФ=dd.MM.yyyy;"),
							Формат(ВремяНачалаРабот, "ДЛФ=T;"),
							Формат(ВремяОкончанияРабот, "ДЛФ=T;"),
							Клиент,
							Специалист);
		ВКМ_ОбщегоНазначенияСервер.ЗаписатьУведомлениеВСправочник(ТекстСообщения);
	Иначе
		ПроверитьИзменения();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьДоговор(Отказ)

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ПО ВКМ_ОбслуживаниеКлиента.Договор = ДоговорыКонтрагентов.Ссылка
		|ГДЕ
		|	ДоговорыКонтрагентов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание)
		|	И ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
		|	И ВКМ_ОбслуживаниеКлиента.Дата
		|		МЕЖДУ ДоговорыКонтрагентов.ВКМ_ПериодДействияНачало И ДоговорыКонтрагентов.ВКМ_ПериодДействияКонец";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ТекстСообщения = "Ошибка проведения документа!
						|В договоре выбран неверный вид договора,
						|либо дата документа лежит ВНЕ диапазона дат действия договора.";
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьДвижения(Отказ)

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВыполненныеРаботы.Ссылка.Специалист КАК Специалист,
		|	СУММА(ВыполненныеРаботы.ЧасыКОплатеКлиенту) КАК КоличествоЧасов,
		|	СУММА(ВыполненныеРаботы.ЧасыКОплатеКлиенту * ЕСТЬNULL(ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы, 0)) КАК
		|		СуммаКОплате
		|ПОМЕСТИТЬ вт_ДанныеДокумента
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента.ВыполненныеРаботы КАК ВыполненныеРаботы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ПО ВыполненныеРаботы.Ссылка.Договор = ДоговорыКонтрагентов.Ссылка
		|ГДЕ
		|	ВыполненныеРаботы.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВыполненныеРаботы.Ссылка.Специалист
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УсловияОплатыСотрудников.Сотрудник КАК Сотрудник,
		|	вт_ДанныеДокумента.КоличествоЧасов КАК КоличествоЧасов,
		|	вт_ДанныеДокумента.СуммаКОплате КАК СуммаКОплатеКлиенту,
		|	вт_ДанныеДокумента.СуммаКОплате * УсловияОплатыСотрудников.ПроцентОтРабот / 100 КАК СуммаКОплатеСотруднику
		|ИЗ
		|	вт_ДанныеДокумента КАК вт_ДанныеДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВКМ_УсловияОплатыСотрудниковСрезПоследних.Период КАК Период,
		|			ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|			ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад КАК Оклад,
		|			ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот КАК ПроцентОтРабот
		|		ИЗ
		|			РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Период, Сотрудник = &Сотрудник) КАК
		|				ВКМ_УсловияОплатыСотрудниковСрезПоследних) КАК УсловияОплатыСотрудников
		|		ПО вт_ДанныеДокумента.Специалист = УсловияОплатыСотрудников.Сотрудник
		|ГДЕ
		|	УсловияОплатыСотрудников.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Сотрудник", Специалист);
	
	РезультатЗапроса = Запрос.Выполнить();

	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
		Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
		
		Выборка.Следующий();

		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Клиент = Клиент;
		Движение.Договор = Договор;
		Движение.КоличествоЧасов = Выборка.КоличествоЧасов;
		Движение.СуммаКОплате = Выборка.СуммаКОплатеКлиенту;

		Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Сотрудник = Специалист;
		Движение.ЧасовКОплате = Выборка.КоличествоЧасов;
		Движение.СуммаКОплате = Выборка.СуммаКОплатеСотруднику;
	Иначе
		ТекстСообщения = "Для сотрудника %1 не установлен процент оплаты от работ! Проведение невозможно!";
		ТекстСообщенияШаблон = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Специалист);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщенияШаблон, , , , Отказ);
	КонецЕсли;
		
КонецПроцедуры

Процедура ПроверитьИзменения()
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка,
		"Специалист, ДатаПроведенияРабот, ВремяНачалаРабот, ВремяОкончанияРабот", Истина);

	Если Специалист <> ЗначенияРеквизитов["Специалист"] Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					"В документе %1 изменился специалист. Новый специалист: %2", Ссылка, Специалист);
		ВКМ_ОбщегоНазначенияВызовСервера.ЗаписатьУведомлениеВСправочник(ТекстСообщения);
	КонецЕсли;

	Если ДатаПроведенияРабот <> ЗначенияРеквизитов["ДатаПроведенияРабот"] Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					"В документе %1 изменилась дата проведения работ! Новая дата: %2", Ссылка, Формат(
			ДатаПроведенияРабот, "ДФ=dd.MM.yyyy;"));
		ВКМ_ОбщегоНазначенияВызовСервера.ЗаписатьУведомлениеВСправочник(ТекстСообщения);
	КонецЕсли;

	Если ВремяНачалаРабот <> ЗначенияРеквизитов["ВремяНачалаРабот"] Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					"В документе %1 изменилось время начала работ! Новое время: %2", Ссылка, Формат(
			ВремяНачалаРабот, "ДЛФ=T;"));
		ВКМ_ОбщегоНазначенияВызовСервера.ЗаписатьУведомлениеВСправочник(ТекстСообщения);
	КонецЕсли;

	Если ВремяОкончанияРабот <> ЗначенияРеквизитов["ВремяОкончанияРабот"] Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					"В документе %1 изменилось время окончания работ! Новое время: %2", Ссылка, Формат(
			ВремяОкончанияРабот, "ДЛФ=T;"));
		ВКМ_ОбщегоНазначенияВызовСервера.ЗаписатьУведомлениеВСправочник(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли