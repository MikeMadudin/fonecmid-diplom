
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура добавляет на форму команду Создать на основании
//
// Параметры:
// КомандыСозданияНаОсновании - ТаблицаЗначений
//
// Возвращаемое значение:
// СтрокаТаблицыЗначений
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.РеализацияТоваровУслуг) Тогда
		
        КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
        КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя();
        КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.РеализацияТоваровУслуг);
        КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

Процедура ПриОпределенииНастроекПечати(НастройкиОбъекта) Экспорт	
	НастройкиОбъекта.ПриДобавленииКомандПечати = Истина;
КонецПроцедуры

// Процедура добавляет команды для печати на форму
//
// Параметры:
// КомандыПечати - Структура
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Акт выполненных работ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктВыполненныхРабот";
	КомандаПечати.Представление = НСтр("ru = 'Акт выполненных работ'");
	КомандаПечати.Порядок = 5;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "АктВыполненныхРабот");
	Если ПечатнаяФорма <> Неопределено Тогда
	    ПечатнаяФорма.ТабличныйДокумент = ПечатьАктВыполненныхРабот(МассивОбъектов, ОбъектыПечати);
	    ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Акт выполненных работ'");
	    ПечатнаяФорма.ПолныйПутьКМакету = "Документ.РеализацияТоваровУслуг.ПФ_MXL_ВКМ_АктВыполненныхРабот";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПечатьАктВыполненныхРабот(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_РеализацияТоваровУслуг";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РеализацияТоваровУслуг.ПФ_MXL_ВКМ_АктВыполненныхРабот");
	
	ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеДокументов.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			// Все документы нужно выводить на разных страницах.
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВывестиШапкуАкта(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиТаблицуАкта(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиПодвалАкта(ДанныеДокументов, ТабличныйДокумент, Макет);
		
	    // В табличном документе необходимо задать имя области, в которую был 
	    // выведен объект. Нужно для возможности печати комплектов документов.
	    УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
	        НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);		
		
	КонецЦикла;	
		
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьДанныеДокументов(МассивОбъектов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслуг.Номер КАК НомерДокумента,
	|	РеализацияТоваровУслуг.Дата КАК ДатаДокумента,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокумента,
	|	РеализацияТоваровУслуг.Организация.Представление КАК Исполнитель,
	|	РеализацияТоваровУслуг.Контрагент.Представление КАК Контрагент,
	|	РеализацияТоваровУслуг.Договор.Представление КАК Договор,
	|	РеализацияТоваровУслуг.Договор.ВКМ_ПериодДействияНачало КАК ДатаДоговора,
	|	РеализацияТоваровУслуг.Ответственный.Представление КАК Ответственный,
	|	РеализацияТоваровУслуг.Услуги.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Количество,
	|		Цена,
	|		Сумма)
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В (&МассивОбъектов)";

	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Процедура ВывестиШапкуАкта(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка");
	
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("НомерДокумента", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокументов.НомерДокумента));
	ДанныеПечати.Вставить("ДатаДокумента", Формат(ДанныеДокументов.ДатаДокумента, "ДЛФ=D"));
	ДанныеПечати.Вставить("Исполнитель", ДанныеДокументов.Исполнитель);
	ДанныеПечати.Вставить("Контрагент", ДанныеДокументов.Контрагент);
	ДанныеПечати.Вставить("Договор", ДанныеДокументов.Договор);
	ДанныеПечати.Вставить("ДатаДоговора", Формат(ДанныеДокументов.ДатаДоговора, "ДЛФ=D"));
	
	ОбластьШапка.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
КонецПроцедуры

Процедура ВывестиТаблицуАкта(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ОбластьШапкаТаблицы");
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы); 
	
	ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("ОбластьСтрокаТаблицы");
	
	ТаблицаДокумента = ДанныеДокументов.Услуги.Выгрузить();
	Для Каждого СтрокаТаблицы Из ТаблицаДокумента Цикл
		ОбластьСтрокаТаблицы.Параметры.Заполнить(СтрокаТаблицы);
		ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиПодвалАкта(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьПодвал = Макет.ПолучитьОбласть("ОбластьПодвал");
	
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("Ответственный", ДанныеДокументов.Ответственный);
	ДанныеПечати.Вставить("СуммаИтог", ДанныеДокументов.СуммаДокумента);

	ФорматнаяСтрока = "Л=ru_RU";
	ПараметрыИсчисления = ", , , , , , , , 0";
	ДанныеПечати.Вставить("СуммаПрописью", НРег(СокрЛП(ЧислоПрописью(ДанныеДокументов.СуммаДокумента, ФорматнаяСтрока, ПараметрыИсчисления))));

	ОбластьПодвал.Параметры.Заполнить(ДанныеПечати);

	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли